"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ò—Ç–µ—Ä–∞—Ü–∏–∏ ‚Ññ2
"""
import asyncio
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(str(Path(__file__).parent / "src"))

from src.utils.advanced_config_loader import AdvancedConfigLoader
from src.prompts import PromptTemplates


def test_advanced_config_loader():
    """–¢–µ—Å—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...")
    
    try:
        config_loader = AdvancedConfigLoader()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        agents_config = config_loader.load_agents_config()
        interactions_config = config_loader.load_interactions_config()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        assert "agents" in agents_config, "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        assert "supported_providers" in agents_config, "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        assert "security" in agents_config, "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        
        print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ –∞–≥–µ–Ω—Ç–æ–≤
        agents = agents_config["agents"]
        for agent_id, agent_data in agents.items():
            print(f"\nüìã –ê–≥–µ–Ω—Ç: {agent_id}")
            print(f"   –ò–º—è: {agent_data['name']}")
            print(f"   –†–æ–ª—å: {agent_data['role']}")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {agent_data['description']}")
            print(f"   –®–∞–±–ª–æ–Ω –ø—Ä–æ–º–ø—Ç–∞: {agent_data.get('prompt_template', '–ù–µ—Ç')}")
            print(f"   –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: {agent_data.get('capabilities', [])}")
            print(f"   –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {agent_data.get('limitations', [])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–∏
            model_config = agent_data["model"]
            print(f"   –ú–æ–¥–µ–ª—å: {model_config['model_name']} ({model_config['provider']})")
            print(f"   –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: temp={model_config['temperature']}, max_tokens={model_config.get('max_tokens', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
        providers = agents_config["supported_providers"]
        print(f"\nüîå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã: {list(providers.keys())}")
        
        for provider_name, provider_data in providers.items():
            print(f"   {provider_name}: {provider_data['name']}")
            print(f"     –ú–æ–¥–µ–ª–∏: {provider_data['models']}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞: {e}")
        return False


def test_prompt_templates():
    """–¢–µ—Å—Ç —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
        templates = PromptTemplates.list_templates()
        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã: {templates}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω
        for template_name in templates:
            try:
                template = PromptTemplates.get_template(template_name)
                print(f"   ‚úÖ –®–∞–±–ª–æ–Ω '{template_name}' –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                print(f"      –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {template.variables}")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                test_vars = {var: f"test_{var}" for var in template.variables}
                rendered = template.render(**test_vars)
                print(f"      –†–µ–Ω–¥–µ—Ä–∏–Ω–≥: {len(rendered)} —Å–∏–º–≤–æ–ª–æ–≤")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ —à–∞–±–ª–æ–Ω–µ '{template_name}': {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤: {e}")
        return False


def test_config_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...")
    
    try:
        config_loader = AdvancedConfigLoader()
        
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        validation_results = config_loader.validate_all_configs()
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
        for check_name, result in validation_results.items():
            status = "‚úÖ" if result else "‚ùå"
            print(f"   {status} {check_name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–≥–µ–Ω—Ç–æ–≤
        agents_config = config_loader.load_agents_config()
        agents = agents_config["agents"]
        
        print(f"\nüîç –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∞–≥–µ–Ω—Ç–æ–≤:")
        for agent_id in agents.keys():
            capabilities = config_loader.get_agent_capabilities(agent_id)
            limitations = config_loader.get_agent_limitations(agent_id)
            print(f"   {agent_id}:")
            print(f"     –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: {capabilities}")
            print(f"     –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {limitations}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
        providers = config_loader.get_supported_providers()
        print(f"\nüîå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã: {providers}")
        
        for provider in providers:
            models = config_loader.get_provider_models(provider)
            print(f"   {provider}: {models}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
        return False


def test_security_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    
    try:
        config_loader = AdvancedConfigLoader()
        security_config = config_loader.get_security_config()
        
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:")
        print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–≤–æ–¥–∞: {security_config.max_input_length}")
        print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤—ã–≤–æ–¥–∞: {security_config.max_output_length}")
        print(f"   –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {security_config.content_filtering}")
        print(f"   –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏: {security_config.rate_limiting}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {e}")
        return False


def test_prompt_template_rendering():
    """–¢–µ—Å—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        data_analysis_template = PromptTemplates.get_template("data_analysis")
        
        test_data = {
            "data": {
                "sales": [100, 150, 200, 180, 250],
                "months": ["–Ø–Ω–≤", "–§–µ–≤", "–ú–∞—Ä", "–ê–ø—Ä", "–ú–∞–π"]
            },
            "context": "–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –∑–∞ Q1",
            "requirements": "–í—ã—è–≤–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã –∏ –∞–Ω–æ–º–∞–ª–∏–∏"
        }
        
        rendered = data_analysis_template.render(**test_data)
        print(f"‚úÖ –®–∞–±–ª–æ–Ω –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   –î–ª–∏–Ω–∞: {len(rendered)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ: {'sales' in rendered}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç: {'Q1' in rendered}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞
        code_generation_template = PromptTemplates.get_template("code_generation")
        
        test_code_data = {
            "task": "–°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞",
            "requirements": "–° –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π",
            "language": "Python",
            "version": "3.8+",
            "style": "PEP 8",
            "context": "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è"
        }
        
        rendered_code = code_generation_template.render(**test_code_data)
        print(f"‚úÖ –®–∞–±–ª–æ–Ω –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   –î–ª–∏–Ω–∞: {len(rendered_code)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–¥–∞—á—É: {'—Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞' in rendered_code}")
        print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç —è–∑—ã–∫: {'Python' in rendered_code}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: {e}")
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ò—Ç–µ—Ä–∞—Ü–∏–∏ ‚Ññ2: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –ø—Ä–æ–º–ø—Ç—ã\n")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    os.makedirs("logs", exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    tests = [
        test_advanced_config_loader,
        test_prompt_templates,
        test_config_validation,
        test_security_config,
        test_prompt_template_rendering
    ]
    
    results = []
    for test in tests:
        try:
            result = test()
            results.append(result)
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
            results.append(False)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    passed = sum(results)
    total = len(results)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ò—Ç–µ—Ä–∞—Ü–∏–∏ ‚Ññ2: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ò—Ç–µ—Ä–∞—Ü–∏–∏ ‚Ññ2 –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\n‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
        print("   - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–æ–≤ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π")
        print("   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤")
        print("   - –®–∞–±–ª–æ–Ω—ã –ø—Ä–æ–º–ø—Ç–æ–≤ —Å Jinja2")
        print("   - –°–∏—Å—Ç–µ–º–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∞–≥–µ–Ω—Ç–æ–≤")
        print("   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        print("   - –ù–æ–≤—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")
    
    return passed == total


if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1) 
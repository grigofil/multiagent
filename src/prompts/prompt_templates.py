"""
Шаблоны промптов для различных задач агентов
"""
from typing import Dict, Any, List
from jinja2 import Template
from loguru import logger


class PromptTemplate:
    """Базовый класс для шаблонов промптов"""
    
    def __init__(self, template: str, variables: List[str] = None):
        self.template = Template(template)
        self.variables = variables or []
    
    def render(self, **kwargs) -> str:
        """Рендеринг промпта с переданными переменными"""
        try:
            return self.template.render(**kwargs)
        except Exception as e:
            logger.error(f"Ошибка при рендеринге промпта: {e}")
            raise


class PromptTemplates:
    """Коллекция шаблонов промптов для различных задач"""
    
    # Шаблоны для анализа данных
    DATA_ANALYSIS_TEMPLATE = PromptTemplate("""
Ты опытный аналитик данных. Проанализируй следующие данные:

**Данные для анализа:**
{{ data }}

**Контекст анализа:**
{{ context if context else "Общий анализ данных" }}

**Требования к анализу:**
{{ requirements if requirements else "Предоставь структурированный анализ с выводами" }}

Пожалуйста, предоставь:
1. **Краткое описание данных** - что представляют собой данные
2. **Основные метрики** - ключевые показатели и статистики
3. **Паттерны и тренды** - выявленные закономерности
4. **Аномалии** - необычные значения или отклонения
5. **Рекомендации** - предложения по дальнейшему анализу или действиям
6. **Визуализация** - предложения по графическому представлению

Формат ответа должен быть структурированным и читаемым.
""", ["data", "context", "requirements"])

    # Шаблоны для разработки кода
    CODE_GENERATION_TEMPLATE = PromptTemplate("""
Ты опытный Python разработчик. Создай код для следующей задачи:

**Задача:**
{{ task }}

**Требования:**
{{ requirements if requirements else "Следуй лучшим практикам Python" }}

**Дополнительные параметры:**
- Язык программирования: {{ language if language else "Python" }}
- Версия: {{ version if version else "3.8+" }}
- Стиль кода: {{ style if style else "PEP 8" }}

**Контекст:**
{{ context if context else "Нет дополнительного контекста" }}

Пожалуйста, создай:
1. **Полный рабочий код** с обработкой ошибок
2. **Документацию** (docstrings, комментарии)
3. **Примеры использования**
4. **Тесты** (если требуется)
5. **Объяснение решения**

Код должен быть:
- Читаемым и понятным
- Эффективным
- Следующим лучшим практикам
- Готовым к использованию
""", ["task", "requirements", "language", "version", "style", "context"])

    # Шаблоны для ревью кода
    CODE_REVIEW_TEMPLATE = PromptTemplate("""
Ты опытный ревьюер кода. Проведи детальный анализ следующего кода:

**Код для ревью:**
```{{ language if language else "python" }}
{{ code }}
```

**Контекст задачи:**
{{ context if context else "Общий ревью кода" }}

**Критерии оценки:**
{{ criteria if criteria else "Качество, читаемость, эффективность, безопасность" }}

Пожалуйста, предоставь:

**1. Общая оценка (1-10):**
- Оценка качества кода
- Краткое резюме

**2. Найденные проблемы:**
- Критические ошибки
- Предупреждения
- Потенциальные улучшения

**3. Рекомендации по улучшению:**
- Конкретные предложения
- Примеры исправлений
- Лучшие практики

**4. Положительные аспекты:**
- Что сделано хорошо
- Примеры хорошего кода

**5. Безопасность:**
- Потенциальные уязвимости
- Рекомендации по безопасности

Будь конструктивным и давай конкретные, actionable рекомендации.
""", ["code", "language", "context", "criteria"])

    # Шаблоны для управления проектами
    PROJECT_MANAGEMENT_TEMPLATE = PromptTemplate("""
Ты опытный менеджер проектов. Проанализируй проект и создай план управления:

**Информация о проекте:**
{{ project_info }}

**Команда:**
{{ team_info if team_info else "Информация о команде не предоставлена" }}

**Ресурсы:**
{{ resources if resources else "Информация о ресурсах не предоставлена" }}

**Ограничения:**
{{ constraints if constraints else "Стандартные ограничения проекта" }}

Пожалуйста, создай:

**1. Анализ проекта:**
- SWOT анализ
- Риски и возможности
- Ключевые заинтересованные стороны

**2. План управления:**
- Этапы проекта
- Временные рамки
- Вехи и контрольные точки

**3. Управление командой:**
- Роли и ответственности
- План коммуникаций
- Процессы принятия решений

**4. Управление рисками:**
- Идентификация рисков
- Стратегии митигации
- Планы реагирования

**5. Метрики успеха:**
- KPI проекта
- Критерии приемки
- Методы измерения прогресса

**6. Рекомендации:**
- Лучшие практики
- Инструменты и технологии
- Процессы и методологии
""", ["project_info", "team_info", "resources", "constraints"])

    # Шаблоны для генерации идей
    IDEA_GENERATION_TEMPLATE = PromptTemplate("""
Ты креативный генератор идей. Создай инновационные идеи для следующей области:

**Область/Проблема:**
{{ domain }}

**Контекст:**
{{ context if context else "Общий контекст" }}

**Ограничения:**
{{ constraints if constraints else "Нет специальных ограничений" }}

**Целевая аудитория:**
{{ audience if audience else "Общая аудитория" }}

Пожалуйста, создай:

**1. Анализ проблемы:**
- Понимание текущей ситуации
- Выявленные потребности
- Возможности для улучшения

**2. Генерированные идеи:**
- **Идея 1:** [Название]
  - Описание
  - Преимущества
  - Потенциальное влияние
  
- **Идея 2:** [Название]
  - Описание
  - Преимущества
  - Потенциальное влияние

- **Идея 3:** [Название]
  - Описание
  - Преимущества
  - Потенциальное влияние

**3. Оценка идей:**
- Критерии оценки
- Ранжирование по приоритету
- Рекомендации по реализации

**4. Следующие шаги:**
- План валидации идей
- Ресурсы для реализации
- Временные рамки

Будь креативным, но практичным. Идеи должны быть реализуемыми и ценными.
""", ["domain", "context", "constraints", "audience"])

    # Шаблоны для оценки качества
    QUALITY_ASSESSMENT_TEMPLATE = PromptTemplate("""
Ты эксперт по оценке качества. Проведи комплексную оценку следующего материала:

**Материал для оценки:**
{{ content }}

**Критерии оценки:**
{{ criteria if criteria else "Качество, точность, полнота, полезность" }}

**Контекст оценки:**
{{ context if context else "Общая оценка качества" }}

**Целевая аудитория:**
{{ target_audience if target_audience else "Общая аудитория" }}

Пожалуйста, проведи оценку по следующим аспектам:

**1. Общая оценка (1-10):**
- Суммарная оценка качества
- Краткое обоснование

**2. Детальная оценка:**
- **Точность:** {{ accuracy_score }}/10
  - Обоснование
- **Полнота:** {{ completeness_score }}/10
  - Обоснование
- **Полезность:** {{ usefulness_score }}/10
  - Обоснование
- **Читаемость:** {{ readability_score }}/10
  - Обоснование

**3. Сильные стороны:**
- Что сделано хорошо
- Положительные аспекты

**4. Области для улучшения:**
- Конкретные недостатки
- Рекомендации по улучшению

**5. Заключение:**
- Общие выводы
- Рекомендации по использованию
- Приоритетные улучшения

Будь объективным и конструктивным в оценке.
""", ["content", "criteria", "context", "target_audience"])

    @classmethod
    def get_template(cls, template_name: str) -> PromptTemplate:
        """Получить шаблон по имени"""
        templates = {
            "data_analysis": cls.DATA_ANALYSIS_TEMPLATE,
            "code_generation": cls.CODE_GENERATION_TEMPLATE,
            "code_review": cls.CODE_REVIEW_TEMPLATE,
            "project_management": cls.PROJECT_MANAGEMENT_TEMPLATE,
            "idea_generation": cls.IDEA_GENERATION_TEMPLATE,
            "quality_assessment": cls.QUALITY_ASSESSMENT_TEMPLATE
        }
        
        if template_name not in templates:
            raise ValueError(f"Шаблон '{template_name}' не найден")
        
        return templates[template_name]
    
    @classmethod
    def list_templates(cls) -> List[str]:
        """Получить список доступных шаблонов"""
        return [
            "data_analysis",
            "code_generation", 
            "code_review",
            "project_management",
            "idea_generation",
            "quality_assessment"
        ] 